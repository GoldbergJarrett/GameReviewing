@page "/"
@using GameReviewing.Services.Interfaces
@using GameReviewing.Models
@inject IGameService GameService
@inject ILogger Logger
@using DM2BD.Typeahead

@using GameReviewing.Components

    <div>
        <div style="display: flex;">
            <div style="font-size: 40px;">List Of Games</div>
            <div style="align-items: center; display: flex;">
                <Typeahead DisableDefaultItemStyles="true" ItemType="Game" DisplayAutocompleteDropdown="true" Selector="((Game x) => x.Title)" Text="Search:" Placeholder=""
                           Filter="(async (x) => GameService.GetGamesByTitle(x))" OnAutocomplete="((x) => { Games = x; StateHasChanged(); })" ResultsAreSame="true">
                    <AutocompleteDropdownItemTemplate Context="searchContext">
                        <div>@searchContext.Title</div>
                    </AutocompleteDropdownItemTemplate>
                    <SubmitButtonTemplate>
                        <span class="input-group-addon primary" style="height: 100%; width: auto; border-top-right-radius: 4px; border-bottom-right-radius: 4px;">
                            <i class="fa fa-search"></i>
                        </span>
                    </SubmitButtonTemplate>
                </Typeahead>
            </div>
        </div>
        <GenericGridList TItem="Game" Items="Games">
            <ItemTemplate Context="game">
                <div style="margin-bottom: 5px; display: flex; flex-direction: column;">
                    <div style="display: flex; align-items: center; width: 285px; height: 360px;">
                        @if (!string.IsNullOrWhiteSpace(game.ImagePath))
                        {
                            <img src="@game.ImagePath" style="max-width: 285px; max-height: 360px;" />
                        }
                    </div>
                    <div>
                        <h5>@game.Title</h5> <h6 style="color:blue;font-family:verdana;">@(game.Rating)</h6>
                        <ReviewGameComponent Game="@game" OnReviewAdded="(() => StateHasChanged())" />
                        <div @onclick="(() => NavigateToGameDetails(game.Id))" class="btn btn-success">Details</div>
                        <div @onclick="(() => NavigateToGameEdit(game.Id))" class="btn btn-warning">Edit</div>
                    </div>
                </div>
            </ItemTemplate>
        </GenericGridList>
    </div>
@code
{
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public Game CurrentlyReviewing { get; set; }

    public List<Game> Games { get; set; }

    public ReviewGameComponent ReviewGameComponent { get; set; }

    public void NavigateToGameDetails(int id)
    {
        NavigationManager.NavigateTo($"/Game/Details/{id}");
    }

    public void NavigateToGameEdit(int id)
    {
        NavigationManager.NavigateTo($"/Game/Edit/{id}");
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Games = GameService.GetGames();
    }

    public void PublicStateHasChanged()
    {
        StateHasChanged();
    }
}