@page "/"
@using GameReviewing.Services.Interfaces
@using GameReviewing.Models
@inject IGameService GameService
@inject ILogger Logger

@using GameReviewing.Components

    <div>
        <h1>List of Games</h1>

        <GenericGridList TItem="Game" Items="Games">
            <ItemTemplate Context="game">
                <div style="margin-bottom: 5px; display: flex; flex-direction: column;">
                    <div style="display: flex; align-items: center; width: 285px; height: 360px;">
                        @if (!string.IsNullOrWhiteSpace(game.ImagePath))
                        {
                            <img src="@game.ImagePath" style="max-width: 285px; max-height: 360px;" />
                        }
                    </div>
                    <div>
                        @game.Title, @(game.Rating)
                        <ReviewGameComponent Game="@game" OnReviewAdded="(() => StateHasChanged())" />
                        <div @onclick="(() => NavigateToGameDetails(game.Id))" class="btn btn-success">Details</div>
                        <div @onclick="(() => NavigateToGameEdit(game.Id))" class="btn btn-warning">Edit</div>
                    </div>
                </div>
            </ItemTemplate>
        </GenericGridList>
    </div>
@code
{
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public Game CurrentlyReviewing { get; set; }

    public List<Game> Games { get; set; }

    public ReviewGameComponent ReviewGameComponent { get; set; }

    public void NavigateToGameDetails(int id)
    {
        NavigationManager.NavigateTo($"/Game/Details/{id}");
    }

    public void NavigateToGameEdit(int id)
    {
        NavigationManager.NavigateTo($"/Game/Edit/{id}");
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Games = GameService.GetGames();
    }

    public void PublicStateHasChanged()
    {
        StateHasChanged();
    }
}